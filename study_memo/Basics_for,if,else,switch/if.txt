###If
Go言語の if ステートメントは、先ほどの for ループと同様に、括弧 ( ) は不要で、中括弧 { } は必要です。

(もうおなじみですね！)


package main

import (
	"fmt"
	"math"
)

func sqrt(x float64) string {
	if x < 0 {
		return sqrt(-x) + "i"
	}
	return fmt.Sprint(math.Sqrt(x))
}

func main() {
	fmt.Println(sqrt(2), sqrt(-4))
}





###If with a short statement
if ステートメントは、 for のように、条件の前に、評価するための簡単なステートメントを書くことができます。

ここで宣言された変数は、 if のスコープ内だけで有効です。

(ためしに最後の return 文で、 v を使ってみてください。 スコープの外なので使えないですよね？)


package main

import (
	"fmt"
	"math"
)

func pow(x, n, lim float64) float64 {
	if v := math.Pow(x, n); v < lim {
		return v
	}
	return lim
}

func main() {
	fmt.Println(
		pow(3, 2, 10),
		pow(3, 3, 20),
	)
}




###If and else
なお、 if ステートメントで宣言された変数は、 else ブロック内でも使うことができます。

(コードの補足: main の fmt.Println は、2つの pow が先に実行されてから実行されます)

package main

import (
	"fmt"
	"math"
)

func pow(x, n, lim float64) float64 {
	if v := math.Pow(x, n); v < lim {
		return v
	} else {
		fmt.Printf("%g >= %g\n", v, lim)
	}
	// can't use v here, though
	return lim
}

func main() {
	fmt.Println(
		pow(3, 2, 10),
		pow(3, 3, 20),
	)
}
